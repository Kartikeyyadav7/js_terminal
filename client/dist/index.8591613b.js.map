{"mappings":"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KC,QAEL,WACK3D,KACAivE,aAEAjvE,KACAivE,YAEA,EACLjvE,KAAKuX,MACA,EACLvX,KACAkvE,WACKt2D,OAEL3X,EAAKyC,UAELC,QACA5D,KAAKC,QACAoF,EACL+pE,QACA,EAAA/pE,EDlCO,CCkCFgqE,EAAA,KAQPnS,YACEoS,EAAK9E,OAOPtN,GAAAA,KAAAA,CAAAh8D,EAAAmE,KAAgBoY,OAOhBy/C,eACO73D,EAAA,aAEA,CAAAmC,OACL,IAAMnC,EACNi8D,gBAEAj8D,EAAA63D,cACA,EACA73D,EAAK63D,SAQPA,GAAAA,EAAAA,gBACA73D,EAAgB63D,SAEdx4C,EAAArf,EAAA63D,SACK,GAAA,CACL,IAAK,IACLl+D,EAAK,IACLkL,EAAK,IACL3K,EAAK,IACLskB,EAAK,IACL3iB,EAAK,IAQPvB,EAAAu9D,IAAAA,EAAAA,IACEz9D,EAAA,IACAR,EAAA,IACA+d,EAAA,IACAsH,EAAA,IACA9kB,EAAA,IACAukB,EAAA,IACApY,EAAA,IACAsG,EAAA,IACA6R,EAAA,IAAKimB,EAQP,IAAAmzB,EAAAA,IACExzD,EAAA,IACArE,EAAA,IACA3F,EAAA,IACAkP,EAAA,IACAsV,EAAA,IACAnM,EAAA,IACAC,EAAA,IACAiyB,EAAA,IACA,IAAK,IACL,IAAK,IAQPizB,IAAAA,IAAA,IACE,KAAK73D,EACL63D,SACA34C,EAAA,CAAM,IACN,KAAKlf,EACL63D,SACAx4C,OAAA,EACArf,EAAK63D,SACA,GAAA,CAQP,IAAAA,IAAAA,IAAgB,IACT,IACL,KAAK,KACL,IAAK,IACL,IAAM,IACN,IAAK,IACL,IAAK,IACL,IACA,IAAK,KACL73D,EAAK63D,SACAj5C,EAAA5e,EAQP63D,SAAAA,GAAA,CACA,IAAAA,IAAAA,KAAgB,IACT,IACL,IAAK,IACL,IAAM,IACN,IAAK,IACL,IAAK,IACL,IACA,IAAK,IACL,IAAK,KACL73D,EAAK63D,SACA14C,EAAA,CAQP,IAAA04C,IAAAA,IAAgB,IACT,IACL,IAAK,KACL,IAAK,IACL,IAAM,IACN,IACA,IAA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","sources":["node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/MouseZoneManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/BaseRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CursorRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CustomGlyphs.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/GridCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/LinkRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/Renderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/SelectionRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/TextRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/LRUMap.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SoundService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TypedArrayUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DirtyRowService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts","node_modules/parseuri/index.js","node_modules/has-cors/index.js","node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/engine.io-client/build/esm/util.js","node_modules/@socket.io/component-emitter/index.js","node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/src/index.ts","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/yeast/index.js","node_modules/parseqs/index.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/transports/polling-xhr.js","node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/engine.io-client/build/esm/index.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/backo2/index.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/index.js","node_modules/socket.io-client/build/esm/url.js","src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.setAttribute('role', 'document');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\nimport { IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: [...this.colors.ansi]\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C0.BEL}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !ev.composed && !this.optionsService.options.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.options.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    const elementStyle = window.getComputedStyle(this._element);\n    const elementPadding = parseInt(elementStyle.paddingLeft) + parseInt(elementStyle.paddingRight);\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth + (this._lastHadScrollBar ? elementPadding : 0)).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.options.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.options.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.options.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: [...colors.ansi]\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ''}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.options.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f]{1})\\/([\\da-f]{1})\\/([\\da-f]{1})$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  private _options: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    this._options = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in this._options) {\n        try {\n          const newValue = options[key];\n          this._options[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.options = this._setupOptions(this._options);\n  }\n\n  private _setupOptions(options: ITerminalOptions): ITerminalOptions {\n    const copiedOptions = { ... options };\n    for (const propName in copiedOptions) {\n      Object.defineProperty(copiedOptions, propName, {\n        get: () => {\n          if (!(propName in DEFAULT_OPTIONS)) {\n            throw new Error(`No option with key \"${propName}\"`);\n          }\n          return this._options[propName];\n        },\n        set: (value: any) => {\n          if (!(propName in DEFAULT_OPTIONS)) {\n            throw new Error(`No option with key \"${propName}\"`);\n          }\n\n          value = this._sanitizeAndValidateOption(propName, value);\n          // Don't fire an option change event if they didn't change\n          if (this._options[propName] !== value) {\n            this._options[propName] = value;\n            this._onOptionChange.fire(propName);\n          }\n        }\n      });\n    }\n    return copiedOptions;\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = {};\n    for (const propName in this._core.options) {\n      Object.defineProperty(this._publicOptions, propName, {\n        get: () => {\n          return this._core.options[propName];\n        },\n        set: (value: any) => {\n          this._checkReadonlyOptions(propName);\n          this._core.options[propName] = value;\n        }\n      });\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n",null,"import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { Terminal } from \"xterm\";\r\nimport \"xterm/css/xterm.css\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst serverAddress = \"http://localhost:8080\";\r\n\r\n//* Create terminal just creates a terminal\r\n\r\nconst createTerminal = (term) => {\r\n\tterm.open(document.getElementById(\"terminal\"));\r\n\tterm.options = {};\r\n\tterm.write(\"Hello\");\r\n\tterm.write(`\\r\\n$ `);\r\n};\r\n\r\n//* connectToSocket will return a new Promise when the socket connection is successfull\r\n\r\nconst connectToSocket = (serverAddress) => {\r\n\treturn new Promise((res) => {\r\n\t\tconst socket = io(serverAddress);\r\n\t\tres(socket);\r\n\t});\r\n};\r\n\r\n/* Here we basically call the function connectToSocket and do something if it connects which is basically\r\ncreate a terminal and then what onData does is returns the thing that we typed in the terminal and then emit that \"input\"\r\nwhich the data gives us and then finally , if we get data response from the \"output\", we write that to the terminal\r\n*/\r\n\r\nconnectToSocket(serverAddress)\r\n\t.then((socket) => {\r\n\t\tconsole.log(\"The socket is getting first\");\r\n\t\tsocket.on(\"connect\", () => {\r\n\t\t\tconsole.log(\"Id\", socket.id);\r\n\t\t\tconsole.log(\"Now the terminal is instantiated\");\r\n\t\t\tconst term = new Terminal();\r\n\t\t\tconsole.log(\"Creating a new terminal now\");\r\n\t\t\tcreateTerminal(term);\r\n\t\t\tsocket.on(\"output\", (data) => {\r\n\t\t\t\tconsole.log(\"Now I am getting data from pty\", data);\r\n\t\t\t\t// When there is data from PTY on server, print that on Terminal.\r\n\t\t\t\tterm.write(data);\r\n\t\t\t});\r\n\t\t\tterm.onData((data) => {\r\n\t\t\t\tconsole.log(\"Now data is being emitted\", data);\r\n\t\t\t\tsocket.emit(\"input\", data);\r\n\t\t\t});\r\n\t\t});\r\n\t})\r\n\t.catch((err) => console.log(\"Error occured while connecting to socket\"));\r\n"],"names":["root","factory","exports","module","define","amd","a","i","self","o1","r2","s1","a1","c","l","h","u","f","e4","t4","_terminal","_renderService","call","this","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","setAttribute","classList","add","tabIndex","_rowContainer","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","n1","prototype","dispose","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","t","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","t2","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","t5","r3","i3","copyHandler","selectionService","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","n2","o2","rightClickHandler","shouldSelectWord","rightClickSelect","select","channels","i4","rgb","rgba","toPaddedHex","s","contrastRatio","l1","l2","t6","toCss","r","g","b","e7","toRgba","color","blend","bg","fg","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","n","toColorRGB","parseInt","slice","e8","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","t7","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","e9","bgL","fgL","t8","i5","s2","a2","r5","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","n4","r6","o4","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","t9","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","u1","e12","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","i6","fallback","fillStyle","console","warn","fillRect","data","getImageData","o","substring","split","map","component","Number","alpha","e13","ColorManager","t10","arguments","elements","parentElement","t11","node","type","handler","options","disposed","o5","r7","s4","a4","e17","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","defineProperty","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","i7","n5","IBufferService","ILogService","IUnicodeService","t12","c2","clickCallback","hoverCallback","a6","r8","c3","e22","t16","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","n6","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","r9","forEach","reply","linkWithState","Map","linkProvided","s6","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","undefined","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","o6","s5","Linkifier2","t14","promptLabel","a7","r13","e29","t20","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","n7","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","o7","s7","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","t18","r14","e31","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","t21","RenderDebouncer","e34","t24","apply","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","r15","t22","o8","r16","s8","a8","l3","_","d","p","m","S","C","w","L","E","M","k","A","R","T","B","O","P","e37","t27","browser","Browser","_keyDownHandled","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","n8","_colorManager","req","acc","ident","C0","ESC","toRgbString","BEL","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","e39","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","t25","Terminal","r18","e42","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","t31","a9","r19","l4","h2","e45","t34","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_lastHadScrollBar","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","n10","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","scrollback","elementStyle","getComputedStyle","elementPadding","paddingLeft","paddingRight","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","o10","s10","t32","o11","r20","s11","a10","e47","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","i13","n11","ICoreService","t35","getCoordsRelativeToElement","rect","t36","r21","colCount","hasValidCharSize","isSelection","i14","r22","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","isWrapped","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","t37","moveToCellSequence","targetX","rowDifference","currX","i18","r26","n14","o13","s15","a13","c5","l6","h5","u3","e55","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","t41","BaseRenderLayer","a14","r27","l7","h6","BLINK_INTERVAL","e58","t44","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","block","_renderBlockCursor","_renderUnderlineCursor","n15","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","o14","s16","CursorRenderLayer","t42","e59","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","u4","time","setInterval","wt","r28","t45","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","i20","n16","o15","s17","a15","c6","l8","h7","u5","f2","_1","d1","p1","v1","g1","m1","S1","xp","yp","D","I","H","F","W","U","q","N","z","K","G","V","X","Y","Z","J","$","Q","ee","te","re","ie","ne","oe","se","ae","ce","le","he","ue","fe","_e","de","pe","ve","ge","ye","me","Se","Ce","be","we","Le","Ee","xe","Me","ke","Ae","Re","Te","Be","Oe","De","Pe","Ie","He","Fe","je","We","Ue","qe","Ne","ze","Ke","Ge","Ve","Xe","Ye","Ze","Je","$e","Qe","et","tt","rt","it","nt","ot","st","at","ct","lt","ht","ut","ft","_t","dt","pt","vt","yt","charDefinition","yOffset","mt","patternSet","cachedPatterns","Ct","bt","o16","s18","a16","tmpCanvas","tmpCtx","imageData","ImageData","r29","startsWith","substr","Et","parseFloat","putImageData","pattern","createPattern","boxDrawingDefinition","entries","instructions","e63","instruction","e62","args","error","stroke","closePath","xOffset","clamp","svgToCanvasInstructionMap","bezierCurveTo","lineTo","moveTo","kt","translateArgs","i21","n17","xt","cache","r30","Reflect","decorate","onShowLinkUnderline","onHideLinkUnderline","s19","__param","r31","e69","t49","is256Color","LinkRenderLayer","instantiationService","nextRendererId","_renderLayers","TextRenderLayer","r32","_id","SelectionRenderLayer","e72","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","t52","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","t53","e76","_didStateChange","viewportEndRow","t55","viewportCappedStartRow","viewportCappedEndRow","viewportStartRow","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","GridCache","t56","c10","r34","l12","terminalFont","u7","e79","_forEachCell","firstRow","lastRow","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","callback","_drawBackground","nextFillStyle","isBgPalette","prevFillStyle","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","measureText","overlaps","_didWarmUp","_doWarmUp","o20","s22","f4","BaseCharAtlas","charAtlasCache","generateConfig","entry","ownedBy","configEquals","atlas","e83","t61","DynamicCharAtlas","newConfig","config","newEntry","e84","clonedColors","concat","i26","CHAR_ATLAS_CELL_SPACING","e86","t64","TEXTURE_WIDTH","TEXTURE_HEIGHT","TypeError","constructor","i27","glyph","create","_config","_drawToCacheCount","NoneCharAtlas","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","s23","_cacheCanvas","l13","r37","h9","_tmpCtx","_width","_height","_cacheMap","LRUMap","prealloc","capacity","_cacheCtx","n23","t65","_canCache","getGlyphCacheKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","cacheX","cacheY","drawImage","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","a21","fontStyle","isEmpty","o21","offset","inBitmap","_addGlyphToBitmap","isSafari","_generateBitmap","createImageBitmap","then","bitmap","_map","_head","_tail","_unlinkNode","prev","_appendNode","tail","_nodePool","nodePool","e89","head","peekValue","BG_CLASS_PREFIX","FOCUS_CLASS","_linkifier","t67","_terminalClass","h10","t69","e92","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_linkifier2","a22","TERMINAL_CLASS_PREFIX","_themeStyleElement","_dimensionsStyleElement","n24","overflow","styles","_terminalSelector","BOLD_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","FG_CLASS_PREFIX","c12","_createSelectionElement","middleRowsCount","colStart","colEnd","createRow","_setCellUnderline","span","textDecoration","enumerable","configurable","n25","DIM_CLASS","ITALIC_CLASS","t70","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","o23","r40","s25","h11","f6","isCursorRow","joinedRanges","charElement","display","_applyMinimumContrast","_addStyle","padStart","e94","padChar","isSelectAllActive","selectionStartLength","e95","t71","SelectionModel","areSelectionValuesReversed","startPlusLength","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","n26","t72","o24","r41","a24","e98","_parentElement","_result","_measureElement","i30","e99","geometry","combinedData","firstCell","isCombined","t73","a25","r42","c14","l15","h12","setFromCharData","t75","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","e102","rangeStartColumn","currentStringIndex","getTrimmedLength","rangeAttrBG","_getJoinedRanges","lineStr","ranges","rangeStartStringIndex","rangeAttrFG","getBg","startIndex","endIndex","joinerRanges","_mergeRanges","_stringRangesToCellRanges","allJoinedRanges","currentRangeStarted","currentRange","currentRangeIndex","getString","newRange","inRange","getRootNode","activeElement","hasFocus","t76","r43","s28","e107","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","l16","r44","f8","_onRefreshRequest","t79","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","e110","NON_BREAKING_SPACE_CHAR","_dragScrollAmount","_enabled","c15","r45","h13","u11","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","l17","_mouseUpListener","onUserInput","_trimListener","_onBufferActivate","_activeSelectionMode","_onMouseUp","_onTrim","_model","_removeMouseDownListeners","t83","finalSelectionStart","finalSelectionEnd","lineText","startRowEndCol","e115","ALL_NON_BREAKING_SPACE_REGEX","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","v2","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","_3","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","_selectToWordAt","getOption","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesBelow","leftLongCharOffset","charAt","leftWideCharCount","rightWideCharCount","_isCharWordSeparator","rightLongCharOffset","charOffset","trim","previousBufferLine","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","getWrappedRangeForLine","createDecorator","s30","p2","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","n31","audioContext","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","e118","base64","atob","len","binaryString","Uint8Array","bytes","charCodeAt","dataURI","destination","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","_maxLength","_startIndex","_length","o29","t84","s31","r47","i36","n32","e120","Array","newMaxLength","_getCyclicIndex","newArray","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","val","depth","isArray","clone","clonedObject","e123","t88","_onBinary","_onData","_onLineFeed","r48","InstantiationService","OptionsService","t89","BufferService","LogService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","InputHandler","onBinary","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","e124","_onScrollApi","_windowsMode","writeSync","LogLevelEnum","WARN","hasWriteSyncWarnHappened","isNaN","MINIMUM_COLS","MINIMUM_ROWS","eraseAttr","scroll","pageCount","scrollPages","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","e125","_event","_disposed","t87","e126","t91","e127","arg2","queue","from","e130","t93","MAX_PARSEBUFFER_LENGTH","i37","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","t92","setWinSizePixels","o30","s32","r50","raiseWin","c16","l18","lowerWin","f10","refreshWin","d4","p3","setWinSizeChars","maximizeWin","S2","C1","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","unhook","subarray","e131","_parser","EscapeSequenceParser","_coreMouseService","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","r51","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_parseBuffer","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_4","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","insertChars","intermediates","scrollLeft","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","scrollDown","eraseChars","cursorBackwardTab","deleteChars","charPosAbsolute","scrollUp","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","hVPosition","tabClear","setMode","vPositionRelative","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","VT","carriageReturn","BS","backspace","LF","tab","SO","shiftOut","SI","shiftIn","IND","NEL","nextLine","HTS","tabSet","OscHandler","setIconName","setTitle","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","a29","t94","_preserveStack","_logSlowResolvingAsync","Promise","race","res","catch","err","parse","DEBUG","clearRange","decode","wasPaused","e134","print","chWidth","wraparoundMode","wraparound","modes","insertMode","markDirty","bufferRow","setCellFromCodePoint","curAttr","wcwidth","charset","ch","stringFromCodePoint","extended","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","e135","convertEol","reverseWraparound","_restrictCursor","nextStop","maxCol","origin","_setCursor","_moveCursor","cursorUp","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","scrollBackSize","scrollBottomAbsolute","deleteCells","_is","termName","term","setModePrivate","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","c1","mode","cSpace","advance","getSubParams","accu","underlineColor","_processUnderline","underlineStyle","updateExtended","hasSubParams","_extractColor","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","parseColor","_setOrReportSpecialColor","collectAndFlag","level","fill","markAllDirty","_disposables","t96","unregister","e137","disposables","array","navigator","userAgent","platform","includes","isIpad","isIphone","test","e138","t97","r53","lastChar","CHAR_DATA_CODE_INDEX","e139","ExtendedAttrs","fromColorRGB","newObj","t99","e141","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","e142","_hasScrollback","t100","r55","i38","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_cols","_rows","n34","CircularList","_getCorrectBufferLength","s33","getWhitespaceCell","BufferLine","maxLength","h15","relativeY","e144","correctBufferLength","fillViewportRows","fillAttr","newCols","nullCell","newRows","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","wrappedLines","absoluteY","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","toInsert","countToInsert","a30","destLineIndex","srcLineIndex","srcCol","copyCellsFrom","cellsToCopy","destCol","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","viewportAdjustments","trimmedLines","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","nextI","insertEvents","countInsertedSoFar","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","last","tabStopWidth","marker","Marker","onTrim","onInsert","onDelete","onDispose","e145","_removeMarker","endOverscan","BufferStringIterator","Buffer","_startOverscan","_endIndex","_buffer","_endOverscan","_trimRight","_current","e146","_combined","_extendedAttrs","t101","i39","r56","n35","o32","s34","e148","CHAR_DATA_ATTR_INDEX","eAttrs","codePoint","fillCellData","keys","copyFrom","applyInReverse","srcCombinedKeys","cp","e149","t102","e150","t103","r57","bufferAbsoluteY","srcTrimmedTineLength","countToRemove","nextToRemoveIndex","countRemovedSoFar","nextToRemoveStart","newLayout","newLayoutLines","oldCols","newLineLengths","cellsNeeded","reduce","cellsAvailable","oldTrimmedLength","srcLine","lineLength","e153","t106","i40","t105","BufferSet","_normal","inactiveBuffer","t107","_alt","e156","t109","obj","i41","t108","r59","e157","t110","DEFAULT_ATTR","isDisposed","_onDispose","_nextId","r60","t111","NUL","SOH","STX","EOT","ACK","HT","DLE","DC1","DC2","DC3","NAK","SYN","ETB","CAN","EM","SUB","SP","DEL","PAD","HOP","BPH","NBH","HTJ","VTS","PLU","SS2","SS3","PU1","PU2","STS","CCH","MW","SPA","EPA","ENQ","SOS","SGCI","SCI","CSI","ST","OSC","FF","KEYCODE_KEY_MAPPINGS","FS","GS","RS","US","SSA","ESA","PLD","RI","DCS","applicationCursorMode","e160","t113","r61","modifiers","keyMapping","codepoint","_interim","t114","startPos","utf32ToString","r62","e162","interim","byte3","tmp","missing","discardInterim","i43","e163","fourStop","byte2","byte4","byte1","table","BMP_COMBINING","e164","t115","r63","UnicodeV6","i44","n37","version","ucs","mid","num","HIGH_COMBINING","queueMicrotask","resolve","cb","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","e166","_syncCalls","maxSubsequentCalls","e167","chunk","t116","e168","_innerWrite","lastTime","startTime","qmt","HASH_REX","pad","toLowerCase","low","i45","base","e170","t117","n38","adv","bits","PAYLOAD_LIMIT","_handlers","_active","EMPTY_HANDLERS","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","e171","t118","r66","handlerIndex","clearHandler","setHandlerFallback","e172","e173","put","handlerResult","success","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","n39","e174","e177","t120","i48","setPrototypeOf","__proto__","setDefault","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","t119","EXECUTABLES","r67","a32","c18","PRINTABLES","states","addMany","e178","r68","t121","e179","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","f12","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","n40","r69","e180","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","e181","clearCsiHandler","clearDcsHandler","e182","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","o33","t122","i49","r70","e185","_start","_put","e184","MAX_VALUE","e186","maxSubParamsLength","n41","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","newParams","e189","getSubParamsAll","store","cur","_addons","loadAddon","terminal","loadedAddon","instance","_wrappedAddonDispose","e190","t124","AddonManager","init","e191","t125","BufferApiView","e193","getLine","BufferLineApiView","_line","getCell","e194","t126","_core","_onBufferChange","_alternate","e195","t127","BufferNamespaceApi","e197","alternate","addCsiHandler","addDcsHandler","e198","t128","ParserApi","addEscHandler","e200","addOscHandler","e199","e201","provider","versions","activeVersion","UnicodeApi","__decorate","isUserScrolling","s36","t129","a33","r75","e206","r76","_cachedBlankLine","bottomRow","willBufferBeTrimmed","isFull","scrollRegionHeight","oldYdisp","scrollAmount","glevel","_charsets","e208","NONE","restrict","e209","t132","r77","i52","X10","ANY","n43","isSGR","o35","DEFAULT","SGR","eventCode","_protocols","_encodings","c19","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","l21","addEncoding","DEFAULT_ENCODINGS","protocol","name","encoding","e210","a34","_compareEvents","triggerBinaryEvent","report","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","a35","r78","e213","t135","wasUserInput","disableStdin","e214","CoreService","t133","_end","n45","t136","e217","_entries","i54","service","s39","ServiceCollection","t137","_services","getService","ctor","e219","getServiceDependencies","dependency","s40","e220","serviceDependencies","firstServiceArgPos","serviceArgs","t138","INFO","ERROR","off","OFF","n47","_updateLogLevel","_evalLazyOptionalParams","t139","optionalParams","s41","r81","a37","_log","message","e223","e224","info","o39","DEFAULT_BELL_SOUND","i56","e225","t140","r82","i57","__assign","assign","DEFAULT_OPTIONS","n48","o40","altClickMovesCursor","_onOptionChange","_options","_sanitizeAndValidateOption","_setupOptions","copiedOptions","propName","e226","setOption","e228","s42","serviceRegistry","storeServiceDependency","decorator","di$target","t141","e230","r83","ICharsetService","_providers","_onChange","_activeProvider","e231","t142","r84","n49","e232","moduleId","__webpack_module_cache__","__webpack_modules__","__webpack_require__","_addonManager","_publicOptions","_checkReadonlyOptions","t1","i1","e233","t143","r1","_checkProposedApi","allowProposedApi","e234","e235","onBell","onData","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","_verifyIntegers","columns","registerMarker","writeUtf8","writeln","addon","Infinity","n50","$5cd32ef144e3ec06$var$re","$5cd32ef144e3ec06$var$parts","$5cd32ef144e3ec06$exports","src","query","host","authority","ipv6uri","pathNames","path","regx","names","$5cd32ef144e3ec06$var$pathNames","queryKey","$0","$1","$2","$3fbae4465c07206b$exports","XMLHttpRequest","$8738cea5a3709519$export$2e2bcd8739ae039","Function","xdomain","$parcel$interopDefault","$d42ecd488c586d12$export$357523c63a2253b9","$d42ecd488c586d12$var$NATIVE_SET_TIMEOUT","$d42ecd488c586d12$var$NATIVE_CLEAR_TIMEOUT","$d42ecd488c586d12$export$2f67576668b97183","useNativeTimers","setTimeoutFn","clearTimeoutFn","$3ea8b8d65896e9b4$export$4293555f241ae35a","$3ea8b8d65896e9b4$var$Emitter","$3ea8b8d65896e9b4$var$mixin","on","fn","once","removeAllListeners","callbacks","emit","emitReserved","listeners","hasListeners","$d88c7ebb909e8b36$export$c169aefb7330cccb","$d88c7ebb909e8b36$export$47791e8004edd485","$d88c7ebb909e8b36$export$c718b5840781f8a7","$d33cbaa85c37a10a$var$withNativeBlob","Blob","$d33cbaa85c37a10a$var$withNativeArrayBuffer","ArrayBuffer","$d33cbaa85c37a10a$var$encodeBlobAsBase64","fileReader","FileReader","onload","readAsDataURL","$d33cbaa85c37a10a$export$2e2bcd8739ae039","supportsBinary","isView","$c31b91d075ed67e8$var$chars","$c31b91d075ed67e8$var$lookup","$c31b91d075ed67e8$var$i","$16fc5ca1c82a6638$var$withNativeArrayBuffer","$16fc5ca1c82a6638$var$decodeBase64Packet","binaryType","decoded","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","$c31b91d075ed67e8$export$2f872c0f2117be69","$16fc5ca1c82a6638$var$mapBinary","$16fc5ca1c82a6638$export$2e2bcd8739ae039","encodedPacket","$28a0e754d25d961d$var$SEPARATOR","$557279b9d4cd3fa3$export$86495b081fef8e52","super","writable","readyState","socket","onError","msg","desc","description","doOpen","close","doClose","onClose","send","packets","onOpen","packet","onPacket","$faf14c4a12261177$var$prev","$faf14c4a12261177$var$alphabet","$faf14c4a12261177$var$map","$faf14c4a12261177$var$seed","$faf14c4a12261177$var$i","$faf14c4a12261177$var$encode","encoded","$faf14c4a12261177$var$yeast","encode","$faf14c4a12261177$exports","$e17e8da7130a7f30$export$c564cdbbe6da493","$e17e8da7130a7f30$export$2f872c0f2117be69","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","$f165a893dad64eab$export$265ee5eefd4c309b","polling","poll","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","$28a0e754d25d961d$export$d10cc2e7f7566a2d","$28a0e754d25d961d$export$144d64fe58dad441","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","encodedQuery","$e17e8da7130a7f30$exports","hostname","$9c199f3de47c96b3$var$empty","$9c199f3de47c96b3$var$hasXHR2","$f508fe3d85519e40$export$2e2bcd8739ae039","responseType","$9c199f3de47c96b3$export$7fa6c5b6f8193917","method","async","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","requestsCount","requests","onSuccess","cleanup","fromError","responseText","attachEvent","$9c199f3de47c96b3$var$unloadHandler","$cbe8e528c4ac97b3$export$bdd553fddd433dcb","$cbe8e528c4ac97b3$export$3909fb301d3dc8c9","WebSocket","MozWebSocket","$649e4ce5a7aa46be$export$d622b2ad8d90c771","$649e4ce5a7aa46be$export$6100ba28696e12de","lens","$649e4ce5a7aa46be$var$getLens","validLen","placeHoldersLen","arr","$649e4ce5a7aa46be$var$Arr","$649e4ce5a7aa46be$var$_byteLength","curByte","$649e4ce5a7aa46be$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$649e4ce5a7aa46be$var$encodeChunk","$649e4ce5a7aa46be$var$lookup","$bde1acaaacb220a1$export$aafa59e2e03f2942","$bde1acaaacb220a1$export$68d8715fc104d294","$649e4ce5a7aa46be$var$code","$649e4ce5a7aa46be$var$i","$649e4ce5a7aa46be$var$len","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","log","LN2","$1a8fb916953c524d$var$customInspectSymbol","Symbol","$1a8fb916953c524d$var$createBuffer","RangeError","buf","$1a8fb916953c524d$var$Buffer","arg","encodingOrOffset","$1a8fb916953c524d$var$allocUnsafe","$1a8fb916953c524d$var$from","string","isEncoding","$1a8fb916953c524d$var$byteLength","actual","$1a8fb916953c524d$var$fromString","arrayView","$1a8fb916953c524d$var$isInstance","copy","$1a8fb916953c524d$var$fromArrayBuffer","byteOffset","byteLength","$1a8fb916953c524d$var$fromArrayLike","$1a8fb916953c524d$var$fromArrayView","SharedArrayBuffer","valueOf","isBuffer","$1a8fb916953c524d$var$checked","$1a8fb916953c524d$var$numberIsNaN","$1a8fb916953c524d$var$fromObject","toPrimitive","$1a8fb916953c524d$var$assertSize","mustMatch","loweredCase","$1a8fb916953c524d$var$utf8ToBytes","$1a8fb916953c524d$var$base64ToBytes","$1a8fb916953c524d$var$slowToString","$1a8fb916953c524d$var$hexSlice","$1a8fb916953c524d$var$utf8Slice","$1a8fb916953c524d$var$asciiSlice","$1a8fb916953c524d$var$latin1Slice","$1a8fb916953c524d$var$base64Slice","$1a8fb916953c524d$var$utf16leSlice","$1a8fb916953c524d$var$swap","$1a8fb916953c524d$var$bidirectionalIndexOf","$1a8fb916953c524d$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","$1a8fb916953c524d$var$hexWrite","remaining","strLen","parsed","$1a8fb916953c524d$var$utf8Write","$1a8fb916953c524d$var$blitBuffer","$1a8fb916953c524d$var$asciiWrite","byteArray","$1a8fb916953c524d$var$asciiToBytes","$1a8fb916953c524d$var$base64Write","$1a8fb916953c524d$var$ucs2Write","units","hi","lo","$1a8fb916953c524d$var$utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","codePoints","$1a8fb916953c524d$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$1a8fb916953c524d$var$typedArraySupport","poolSize","alloc","$1a8fb916953c524d$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","out","$1a8fb916953c524d$var$hexSliceLookupTable","$1a8fb916953c524d$var$checkOffset","ext","$1a8fb916953c524d$var$checkInt","$1a8fb916953c524d$var$checkIEEE754","$1a8fb916953c524d$var$writeFloat","littleEndian","noAssert","$1a8fb916953c524d$var$writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$1a8fb916953c524d$var$INVALID_BASE64_RE","leadSurrogate","$1a8fb916953c524d$var$base64clean","dst","alphabet","i16","$af961be2748492d4$var$isReactNative","product","$af961be2748492d4$export$911baa0677ac404c","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","onerror","lastPacket","$94fef276fa708b24$export$46dec00755c1153b","websocket","isSSL","request","pollXhr","$19cdddcff2686fcf$export$4798917dbf149b79","transports","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","$19cdddcff2686fcf$var$clone","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","filterUpgrades","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","$30d428d4cd89c1de$var$withNativeArrayBuffer","$30d428d4cd89c1de$var$toString","$30d428d4cd89c1de$var$withNativeBlob","$30d428d4cd89c1de$var$withNativeFile","File","$30d428d4cd89c1de$export$37488ff1135b1696","$30d428d4cd89c1de$var$isView","$30d428d4cd89c1de$export$5234c529abdb5610","$3288f3decdb9da4c$export$ac2edb9eb7af56f6","packetData","pack","$3288f3decdb9da4c$var$_deconstructPacket","attachments","placeholder","_placeholder","newData","$3288f3decdb9da4c$export$a00da3b1ec037a04","$3288f3decdb9da4c$var$_reconstructPacket","$f694dc1e1e626da9$export$a51d6b395ff4c65a","$f694dc1e1e626da9$export$84d4095e16c6fc19","$f694dc1e1e626da9$export$a50aceb0e02a00aa","EVENT","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","$f694dc1e1e626da9$export$f9de6ca0bc043724","decodeString","reconstructor","$f694dc1e1e626da9$var$BinaryReconstructor","takeBinaryData","$f694dc1e1e626da9$var$tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","$720a0bfbdde5845e$export$af631764ddc44097","$20e5d8b62b0b52f0$var$RESERVED_EVENTS","connect","connect_error","disconnecting","newListener","$20e5d8b62b0b52f0$export$4798917dbf149b79","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","auth","_autoConnect","subEvents","subs","onpacket","_readyState","ack","_registerAckCallback","isTransportWritable","engine","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","$b1fc4563f8574f1e$var$Backoff","ms","factor","jitter","attempts","$b1fc4563f8574f1e$exports","duration","rand","random","deviation","setMin","setMax","setJitter","$1ba19c355d3df0a3$export$d0d38e7dec7a1a61","_a","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","parser","$f694dc1e1e626da9$exports","encoder","Encoder","decoder","Decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","$65a9462b6701397b$var$cache","$65a9462b6701397b$export$841407ceb083bd74","loc","$251d09ff3d0a1bcb$export$128fa18b7194ef","sameNamespace","forceNew","multiplex","serverAddress","$e6d056e8c48750d5$exports","getElementById"],"version":3,"file":"index.8591613b.js.map"}